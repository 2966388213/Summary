import{_ as a}from"./plugin-vue_export-helper-c27b6911.js";import{o as e,c as s,a as n}from"./app-4bfb80fa.js";const i={},l=n(`<h1 id="cmake-包管理器" tabindex="-1"><a class="header-anchor" href="#cmake-包管理器" aria-hidden="true">#</a> Cmake 包管理器</h1><h2 id="安装" tabindex="-1"><a class="header-anchor" href="#安装" aria-hidden="true">#</a> 安装</h2><p>到官网下载</p><h2 id="cmake-命令-常用参数" tabindex="-1"><a class="header-anchor" href="#cmake-命令-常用参数" aria-hidden="true">#</a> cmake 命令，常用参数</h2><ul><li><code>-S &lt;path-to-source&gt;</code>：指定源代码目录。</li><li><code>-B &lt;path-to-build&gt;</code>：指定构建目录。</li><li><code>--build &lt;dir&gt;</code>：指定构建目录并执行构建。</li><li><code>--config &lt;name&gt;</code>：指定构建类型（例如Debug或Release）。</li></ul><p>例如，要在<code>/path/to/source</code>目录中构建项目并将生成的Makefile文件保存到<code>/path/to/build</code>目录中，可以使用以下命令：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>cmake <span class="token parameter variable">-S</span> /path/to/source <span class="token parameter variable">-B</span> /path/to/build
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>要在<code>/path/to/build</code>目录中执行构建，请使用以下命令：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>cmake <span class="token parameter variable">--build</span> /path/to/build
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>要在<code>/path/to/build</code>目录中执行Release构建，请使用以下命令：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>cmake <span class="token parameter variable">--build</span> /path/to/build <span class="token parameter variable">--config</span> Release
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="基本配置" tabindex="-1"><a class="header-anchor" href="#基本配置" aria-hidden="true">#</a> 基本配置</h2><p><code>CMakeLists.txt</code></p><div class="language-cmake line-numbers-mode" data-ext="cmake"><pre class="language-cmake"><code><span class="token comment"># CMake 最低版本号要求, 此行必须在顶层</span>
<span class="token keyword">cmake_minimum_required</span><span class="token punctuation">(</span><span class="token property">VERSION</span> <span class="token number">3.27.5</span><span class="token punctuation">)</span>

<span class="token comment"># 项目信息</span>
<span class="token keyword">project</span><span class="token punctuation">(</span><span class="token string">&quot;项目信息&quot;</span><span class="token punctuation">)</span>

<span class="token comment"># 指定生成目标</span>
<span class="token comment"># 第一个参数是程序名，第二个参数是源文件</span>
<span class="token keyword">add_executable</span><span class="token punctuation">(</span>name source.cpp<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="构建项目" tabindex="-1"><a class="header-anchor" href="#构建项目" aria-hidden="true">#</a> 构建项目</h2><blockquote><p>假设当前目录结构是这样的</p></blockquote><ul><li>根目录 <ul><li>src <ul><li>CMakeLists.txt</li><li>main.cpp</li></ul></li><li>build</li></ul></li></ul><blockquote><p><em>当前的目录是根目录</em></p></blockquote><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 使用cmake 3.*的功能构建</span>
cmake <span class="token parameter variable">-S</span> src <span class="token parameter variable">-B</span> build

<span class="token comment"># 项目会在build目录成功构建</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="生成项目" tabindex="-1"><a class="header-anchor" href="#生成项目" aria-hidden="true">#</a> 生成项目</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">#其中src是构建的项目目录</span>
cmake <span class="token parameter variable">--build</span> src
<span class="token comment"># --config 可以指定生成的类型</span>
cmake <span class="token parameter variable">--build</span> <span class="token builtin class-name">.</span> <span class="token parameter variable">--config</span> Release
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="打开项目" tabindex="-1"><a class="header-anchor" href="#打开项目" aria-hidden="true">#</a> 打开项目</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>cmake <span class="token parameter variable">--open</span> src
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="配置或者生成预设" tabindex="-1"><a class="header-anchor" href="#配置或者生成预设" aria-hidden="true">#</a> 配置或者生成预设</h2><blockquote><p>如果不生成预设，vs编辑器无法打开源文件</p></blockquote><p>vs code编辑器可以按<code>ctrl+shift+p</code>输入<code>Cmake: Select Configure Preset</code> 然后选择已有的预设</p>`,26),d=[l];function c(t,r){return e(),s("div",null,d)}const u=a(i,[["render",c],["__file","start.html.vue"]]);export{u as default};
