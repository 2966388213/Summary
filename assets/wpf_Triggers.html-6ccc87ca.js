import{_ as a}from"./plugin-vue_export-helper-c27b6911.js";import{o as n,c as s,a as t}from"./app-afef1db0.js";const o={},p=t(`<h1 id="wpf中样式触发器" tabindex="-1"><a class="header-anchor" href="#wpf中样式触发器" aria-hidden="true">#</a> wpf中样式触发器</h1><h2 id="各种triggers的区别" tabindex="-1"><a class="header-anchor" href="#各种triggers的区别" aria-hidden="true">#</a> 各种Triggers的区别</h2><p>在WPF中，<code>Style</code>的<code>Triggers</code>提供了一种基于特定条件来更改控件外观的机制。主要有三种类型的触发器：<code>PropertyTrigger</code>、<code>DataTrigger</code>和<code>EventTrigger</code>。每种触发器在不同的场景中有不同的用途。下面是它们的区别和用法：</p><h3 id="_1-propertytrigger" tabindex="-1"><a class="header-anchor" href="#_1-propertytrigger" aria-hidden="true">#</a> 1. PropertyTrigger</h3><p><code>PropertyTrigger</code>在某个属性的值满足特定条件时触发。例如，当按钮被按下时改变按钮的背景颜色：</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Style</span> <span class="token attr-name">TargetType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Button<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Style.Triggers</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Trigger</span> <span class="token attr-name">Property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>IsPressed<span class="token punctuation">&quot;</span></span> <span class="token attr-name">Value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>True<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Setter</span> <span class="token attr-name">Property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Background<span class="token punctuation">&quot;</span></span> <span class="token attr-name">Value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Red<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Trigger</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Style.Triggers</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Style</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在这个示例中，当<code>Button</code>的<code>IsPressed</code>属性为<code>True</code>时，背景颜色将变为红色。</p><h3 id="_2-datatrigger" tabindex="-1"><a class="header-anchor" href="#_2-datatrigger" aria-hidden="true">#</a> 2. DataTrigger</h3><p><code>DataTrigger</code>基于绑定的数据值来触发。例如，当绑定的数据值满足特定条件时改变控件的外观：</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Style</span> <span class="token attr-name">TargetType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>TextBlock<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Style.Triggers</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>DataTrigger</span> <span class="token attr-name">Binding</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{Binding Path=IsImportant}<span class="token punctuation">&quot;</span></span> <span class="token attr-name">Value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>True<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Setter</span> <span class="token attr-name">Property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Foreground<span class="token punctuation">&quot;</span></span> <span class="token attr-name">Value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Red<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>DataTrigger</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Style.Triggers</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Style</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在这个示例中，当绑定的<code>IsImportant</code>属性为<code>True</code>时，<code>TextBlock</code>的前景色将变为红色。</p><h3 id="_3-eventtrigger" tabindex="-1"><a class="header-anchor" href="#_3-eventtrigger" aria-hidden="true">#</a> 3. EventTrigger</h3><p><code>EventTrigger</code>在特定事件发生时触发。例如，当鼠标进入按钮时触发动画：</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">Content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Hover over me<span class="token punctuation">&quot;</span></span> <span class="token attr-name">Width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>200<span class="token punctuation">&quot;</span></span> <span class="token attr-name">Height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>50<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button.Triggers</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>EventTrigger</span> <span class="token attr-name">RoutedEvent</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>MouseEnter<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>BeginStoryboard</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Storyboard</span><span class="token punctuation">&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ColorAnimation</span> <span class="token attr-name">Storyboard.TargetProperty</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>(Button.Background).(SolidColorBrush.Color)<span class="token punctuation">&quot;</span></span>
                                    <span class="token attr-name">To</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Yellow<span class="token punctuation">&quot;</span></span> <span class="token attr-name">Duration</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>0:0:0.5<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Storyboard</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>BeginStoryboard</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>EventTrigger</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>EventTrigger</span> <span class="token attr-name">RoutedEvent</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>MouseLeave<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>BeginStoryboard</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Storyboard</span><span class="token punctuation">&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ColorAnimation</span> <span class="token attr-name">Storyboard.TargetProperty</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>(Button.Background).(SolidColorBrush.Color)<span class="token punctuation">&quot;</span></span>
                                    <span class="token attr-name">To</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>White<span class="token punctuation">&quot;</span></span> <span class="token attr-name">Duration</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>0:0:0.5<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Storyboard</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>BeginStoryboard</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>EventTrigger</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button.Triggers</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在这个示例中，当鼠标进入按钮时，背景颜色将动画变为黄色；当鼠标离开按钮时，背景颜色将动画变为白色。</p><h3 id="总结" tabindex="-1"><a class="header-anchor" href="#总结" aria-hidden="true">#</a> 总结</h3><ul><li><code>PropertyTrigger</code>：基于控件属性的值来触发。</li><li><code>DataTrigger</code>：基于绑定的数据值来触发。</li><li><code>EventTrigger</code>：基于特定事件来触发。</li></ul><p>这些触发器为WPF的样式和行为提供了强大的条件控制能力。</p><h2 id="什么修改button的背景颜色要这样书写-button-background-solidcolorbrush-color" tabindex="-1"><a class="header-anchor" href="#什么修改button的背景颜色要这样书写-button-background-solidcolorbrush-color" aria-hidden="true">#</a> 什么修改button的背景颜色要这样书写：(Button.Background).(SolidColorBrush.Color)</h2><p>在WPF中，属性路径（PropertyPath）用于指定要进行动画处理的属性。对于嵌套属性，需要使用括号来明确指定路径。下面解释为什么修改按钮的背景颜色需要这样书写：<code>(Button.Background).(SolidColorBrush.Color)</code>。</p><h3 id="_1-属性层次结构" tabindex="-1"><a class="header-anchor" href="#_1-属性层次结构" aria-hidden="true">#</a> 1. 属性层次结构</h3><p>WPF中的控件属性有时是嵌套的。例如，<code>Button</code>的<code>Background</code>属性是一个<code>Brush</code>对象，而<code>Brush</code>可以进一步是<code>SolidColorBrush</code>，它有一个<code>Color</code>属性。要访问嵌套属性，需要明确路径。</p><h3 id="_2-使用括号指定路径" tabindex="-1"><a class="header-anchor" href="#_2-使用括号指定路径" aria-hidden="true">#</a> 2. 使用括号指定路径</h3><p>括号用于明确指定路径中的每一级属性。例如：</p><ul><li><code>Button.Background</code>：表示<code>Button</code>控件的<code>Background</code>属性。</li><li><code>(Button.Background).(SolidColorBrush.Color)</code>：表示<code>Button</code>控件的<code>Background</code>属性的<code>SolidColorBrush</code>对象的<code>Color</code>属性。</li></ul><h3 id="_3-示例" tabindex="-1"><a class="header-anchor" href="#_3-示例" aria-hidden="true">#</a> 3. 示例</h3><p>以下是一个完整的示例，展示如何通过动画修改按钮的背景颜色：</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">Content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Hover over me<span class="token punctuation">&quot;</span></span> <span class="token attr-name">Width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>200<span class="token punctuation">&quot;</span></span> <span class="token attr-name">Height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>50<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button.Triggers</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>EventTrigger</span> <span class="token attr-name">RoutedEvent</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>MouseEnter<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>BeginStoryboard</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Storyboard</span><span class="token punctuation">&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ColorAnimation</span> <span class="token attr-name">Storyboard.TargetProperty</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>(Button.Background).(SolidColorBrush.Color)<span class="token punctuation">&quot;</span></span>
                                    <span class="token attr-name">To</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Yellow<span class="token punctuation">&quot;</span></span> <span class="token attr-name">Duration</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>0:0:0.5<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Storyboard</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>BeginStoryboard</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>EventTrigger</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>EventTrigger</span> <span class="token attr-name">RoutedEvent</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>MouseLeave<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>BeginStoryboard</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Storyboard</span><span class="token punctuation">&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ColorAnimation</span> <span class="token attr-name">Storyboard.TargetProperty</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>(Button.Background).(SolidColorBrush.Color)<span class="token punctuation">&quot;</span></span>
                                    <span class="token attr-name">To</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>White<span class="token punctuation">&quot;</span></span> <span class="token attr-name">Duration</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>0:0:0.5<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Storyboard</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>BeginStoryboard</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>EventTrigger</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button.Triggers</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在这个示例中，<code>(Button.Background).(SolidColorBrush.Color)</code>路径明确指定了动画要作用的具体属性，即按钮背景颜色的<code>Color</code>属性。</p><h3 id="总结-1" tabindex="-1"><a class="header-anchor" href="#总结-1" aria-hidden="true">#</a> 总结</h3><p><code>(Button.Background).(SolidColorBrush.Color)</code> 表示 <code>Button</code> 控件的 <code>Background</code> 属性中 <code>SolidColorBrush</code> 对象的 <code>Color</code> 属性。</p><p>具体来说，WPF 中的控件属性有时是嵌套的。例如：</p><ol><li><code>Button</code> 控件有一个 <code>Background</code> 属性，这个属性类型是 <code>Brush</code>。</li><li><code>Brush</code> 可以是多种类型之一，其中一种是 <code>SolidColorBrush</code>。</li><li><code>SolidColorBrush</code> 有一个 <code>Color</code> 属性，表示具体的颜色值。</li></ol><p>因此，<code>(Button.Background).(SolidColorBrush.Color)</code> 这条路径明确地指出了动画要作用的具体属性，即 <code>Button</code> 控件的 <code>Background</code> 属性中的 <code>SolidColorBrush</code> 对象的 <code>Color</code> 属性。这样可以确保动画能够准确地修改按钮背景颜色的具体颜色值。</p>`,34),e=[p];function c(l,u){return n(),s("div",null,e)}const d=a(o,[["render",c],["__file","wpf_Triggers.html.vue"]]);export{d as default};
