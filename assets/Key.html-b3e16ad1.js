import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o as s,c as a,a as e}from"./app-2bf5d4a1.js";const t={},p=e(`<h1 id="key" tabindex="-1"><a class="header-anchor" href="#key" aria-hidden="true">#</a> Key</h1><h2 id="备用键和复合键" tabindex="-1"><a class="header-anchor" href="#备用键和复合键" aria-hidden="true">#</a> 备用键和复合键</h2><p>在EF Core中，<strong>备用键</strong>和<strong>复合键</strong>有着特殊的含义和用途。</p><p><strong>备用键</strong>：</p><ul><li>除了主键之外，备用键也能唯一标识一条数据（跟主键一样具有唯一约束)。备用键可以用作外键关系的目标¹。</li><li>当使用关系数据库时，系统通常会在需要时默认你引入备用键，你无需手动配置它们，当然也可以手动配置¹。</li><li>在EF中，备用键是只读的，并且在唯一索引上提供额外的语义，因为它们可以用作外键的目标。</li></ul><p><strong>复合键</strong>：</p><ul><li>复合键是由多个字段组成的键，这些字段一起唯一标识记录。在EF Core中，你可以使用<code>HasIndex</code>方法创建复合索引¹。</li><li>例如，你可以创建一个由<code>FirstName</code>和<code>LastName</code>字段组成的复合索引，如下所示：</li></ul><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code>modelBuilder<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Entity</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Person<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">HasIndex</span><span class="token punctuation">(</span>p <span class="token operator">=&gt;</span> <span class="token keyword">new</span> <span class="token punctuation">{</span> p<span class="token punctuation">.</span>FirstName<span class="token punctuation">,</span> p<span class="token punctuation">.</span>LastName <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//创建多个列的索引</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="generic" tabindex="-1"><a class="header-anchor" href="#generic" aria-hidden="true">#</a> Generic</h2><p>在EF Core中，DatabaseGenerated特性用于指定数据库如何为属性生成值。这个特性接受一个DatabaseGeneratedOption枚举值，该枚举有以下三个值：</p><ul><li>DatabaseGeneratedOption.None：此选项指定属性的值不会由底层数据库生成。这对于覆盖id属性的默认约定很有用。例如，如果你想为id属性提供自己的值，而不是数据库生成的值，可以使用None选项。例如：</li></ul><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Course</span>  
<span class="token punctuation">{</span>  
    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">DatabaseGenerated</span><span class="token attribute-arguments"><span class="token punctuation">(</span>DatabaseGeneratedOption<span class="token punctuation">.</span>None<span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">int</span></span> CourseId <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span> 
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> CourseName <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span> 
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在上面的例子中，EF将在数据库中创建CourseId列，并且不会将其标记为IDENTITY列。所以，每次在调用SaveChanges()方法之前，你都必须提供CourseId属性的值。</p><ul><li>DatabaseGeneratedOption.Identity：你可以使用DatabaseGeneratedOption.Identity选项将非键（非id）属性标记为DB生成的属性。这指定了在INSERT语句上由数据库生成属性的值。这个Identity属性不能被更新。例如：</li></ul><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Course</span>  
<span class="token punctuation">{</span> 
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">int</span></span> CourseId <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span> 
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> CourseName <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>   
    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">DatabaseGenerated</span><span class="token attribute-arguments"><span class="token punctuation">(</span>DatabaseGeneratedOption<span class="token punctuation">.</span>Identity<span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">int</span></span> RecordNum <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span> 
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>DatabaseGeneratedOption.Computed：你可以将属性配置为在添加或更新时生成其值。例如：</li></ul><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Blog</span> 
<span class="token punctuation">{</span> 
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">int</span></span> BlogId <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span> 
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> Url <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span> 
    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">DatabaseGenerated</span><span class="token attribute-arguments"><span class="token punctuation">(</span>DatabaseGeneratedOption<span class="token punctuation">.</span>Computed<span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token return-type class-name">DateTime</span> LastUpdated <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span> 
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">class</span> <span class="token class-name">key</span><span class="token punctuation">{</span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// 创建时间</span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token punctuation">[</span><span class="token function">DatabaseGenerated</span><span class="token punctuation">(</span>DatabaseGeneratedOption<span class="token punctuation">.</span>Identity<span class="token punctuation">)</span><span class="token punctuation">]</span>
<span class="token keyword">public</span> <span class="token return-type class-name">DateTime</span> CreateTime <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// 更新时间</span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token punctuation">[</span><span class="token function">DatabaseGenerated</span><span class="token punctuation">(</span>DatabaseGeneratedOption<span class="token punctuation">.</span>Computed<span class="token punctuation">)</span><span class="token punctuation">]</span>
<span class="token keyword">public</span> <span class="token return-type class-name">DateTime</span> UpdateTime <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,18),c=[p];function o(l,i){return s(),a("div",null,c)}const k=n(t,[["render",o],["__file","Key.html.vue"]]);export{k as default};
