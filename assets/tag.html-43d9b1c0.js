import{_ as a}from"./plugin-vue_export-helper-c27b6911.js";import{o as s,c as e,a as n}from"./app-fb5500ad.js";const i={},t=n(`<h1 id="tag-标签使用" tabindex="-1"><a class="header-anchor" href="#tag-标签使用" aria-hidden="true">#</a> Tag 标签使用</h1><p>git 的 tag 标签是一种给某个提交打上有意义的名字的方式，通常用于标记发布版本或重要的节点。😊</p><p>git 的 tag 标签有两种类型：轻量级的（lightweight）和含附注的（annotated）。轻量级标签只是一个指向特定提交的引用，不包含任何其他信息。含附注标签是一个独立的对象，包含了标签名、创建者、日期、信息等元数据，还可以用 GPG 签名和验证。</p><p>要创建一个轻量级标签，你只需要提供一个标签名，比如：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> tag v1.0
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>要创建一个含附注标签，你需要使用 -a 选项，并提供一个信息，比如：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> tag <span class="token parameter variable">-a</span> v1.0 <span class="token parameter variable">-m</span> <span class="token string">&quot;my version 1.0&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>要查看已有的标签列表，你可以使用 git tag 命令。如果你想按照特定的模式查找标签，你可以使用 -l 选项和通配符。比如：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> tag <span class="token parameter variable">-l</span> <span class="token string">&quot;v1.*&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>要查看某个标签的详细信息和对应的提交内容，你可以使用 git show 命令。比如：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> show v1.0
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>如果你想给过去的某个提交打上标签，你可以在命令末尾指定该提交的校验和或部分校验和。比如：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> tag <span class="token parameter variable">-a</span> v0.9 85fc7e7
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>默认情况下，git push 命令并不会把本地的标签推送到远程仓库中。如果你想共享某个标签，你需要显式地推送它。比如：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> push origin v1.0
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>如果你想一次性推送所有本地新增的标签，你可以使用 --tags 选项：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> push origin <span class="token parameter variable">--tags</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>如果你想删除某个本地或远程的标签，你可以使用 git tag -d 或 git push --delete 命令。比如：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 删除本地标签 v1.0 </span>
<span class="token function">git</span> tag <span class="token parameter variable">-d</span> v1.0

<span class="token comment"># 删除远程仓库中名为 origin 的服务器上的 v1.0 标签 </span>
<span class="token function">git</span> push origin <span class="token parameter variable">--delete</span> v1.0 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,19),l=[t];function d(r,c){return s(),e("div",null,l)}const u=a(i,[["render",d],["__file","tag.html.vue"]]);export{u as default};
