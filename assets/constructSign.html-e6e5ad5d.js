import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o as s,c as a,f as e,a as p}from"./app-dd0e30de.js";const t={},o=p(`<h1 id="构造函数签名-用于实现函数工厂" tabindex="-1"><a class="header-anchor" href="#构造函数签名-用于实现函数工厂" aria-hidden="true">#</a> 构造函数签名，用于实现函数工厂</h1><h6 id="" tabindex="-1"><a class="header-anchor" href="#" aria-hidden="true">#</a></h6><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">BeeKeeper</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">hasMask</span><span class="token operator">:</span> boolean<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">ZooKeeper</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">nametag</span><span class="token operator">:</span> string<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">Animal</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">numLegs</span><span class="token operator">:</span> number<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">Bee</span> <span class="token keyword">extends</span> <span class="token class-name">Animal</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">keeper</span><span class="token operator">:</span> BeeKeeper<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">Lion</span> <span class="token keyword">extends</span> <span class="token class-name">Animal</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">keeper</span><span class="token operator">:</span> ZooKeeper<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// 泛型会约束传入的类型</span>
<span class="token keyword">function</span> createInstance<span class="token operator">&lt;</span><span class="token constant">A</span> <span class="token keyword">extends</span> <span class="token class-name">Animal</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>c<span class="token operator">:</span> <span class="token keyword">new</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token constant">A</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">A</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">c</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// 什么是函数工厂：实现一个函数 返回的则是一个对象，返回的对象是动态的</span>
<span class="token function">createInstance</span><span class="token punctuation">(</span>Lion<span class="token punctuation">)</span><span class="token punctuation">.</span>keeper<span class="token punctuation">.</span>nametag<span class="token punctuation">;</span>  <span class="token comment">// typechecks!</span>
<span class="token function">createInstance</span><span class="token punctuation">(</span>Bee<span class="token punctuation">)</span><span class="token punctuation">.</span>keeper<span class="token punctuation">.</span>hasMask<span class="token punctuation">;</span>   <span class="token comment">// typechecks!</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="构造器签名" tabindex="-1"><a class="header-anchor" href="#构造器签名" aria-hidden="true">#</a> 构造器签名</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 字面量方式构造器签名</span>
<span class="token keyword">const</span> <span class="token literal-property property">myClass1</span><span class="token operator">:</span> <span class="token keyword">new</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">n</span><span class="token operator">:</span>string<span class="token punctuation">,</span> <span class="token literal-property property">a</span><span class="token operator">:</span>number</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> Person <span class="token operator">=</span> Student<span class="token punctuation">;</span>
<span class="token comment">// 接口方式构造器签名</span>
<span class="token keyword">const</span> <span class="token literal-property property">myClass2</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token keyword">new</span> <span class="token punctuation">(</span>n<span class="token operator">:</span>string<span class="token punctuation">,</span> <span class="token literal-property property">a</span><span class="token operator">:</span>number<span class="token punctuation">)</span> <span class="token operator">:</span> Person<span class="token punctuation">}</span> <span class="token operator">=</span> Teacher<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5);function c(l,r){return s(),a("div",null,[e(`
 * @作者: 14770137
 * @Date: 2022-10-07 20:46:37
`),o])}const k=n(t,[["render",c],["__file","constructSign.html.vue"]]);export{k as default};
