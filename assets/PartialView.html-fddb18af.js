import{_ as t}from"./plugin-vue_export-helper-c27b6911.js";import{r as e,o as p,c as l,d as a,e as n,b as c,a as o}from"./app-afef1db0.js";const i={},u=a("h1",{id:"部分视图",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#部分视图","aria-hidden":"true"},"#"),n(" 部分视图")],-1),r={href:"http://xn--ASP-lp6e.NET",target:"_blank",rel:"noopener noreferrer"},d=o(`<h2 id="在cshtml中调用部分视图" tabindex="-1"><a class="header-anchor" href="#在cshtml中调用部分视图" aria-hidden="true">#</a> 在cshtml中调用部分视图</h2><p>首先在<code>Views/Partial</code>目录下创建一个名为<code>_test_view.cshtml</code>的部分视图文件。然后，在需要调用该部分视图的视图中，使用<code>Html.RenderPartialAsync</code>或者<code>Html.PartialAsync</code>指令来引入该部分视图。</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>以波形符斜杠 (~/) 或斜杠 (/) 开头的路径指代应用程序根目录<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>partial</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>~/Views/Partial/_test_view.cshtml<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>partial</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/Views/Partial/_test_view.cshtml<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>使用相对路径的分部视图<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>partial</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>../Partial/_test_view.cshtml<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>异步HTML帮助程序<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
@await Html.PartialAsync(&quot;~/Views/Partial/_test_view.cshtml&quot;)
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>RenderPartialAsync用于直接将其内容嵌入到视图中，而partial通常在控制器中呈现，并返回PartialViewResult<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
@{
    await Html.RenderPartialAsync(&quot;~/Views/Partial/_test_view.cshtml&quot;);
}

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>使用action返回的PartialViewResult渲染<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3);function k(m,v){const s=e("ExternalLinkIcon");return p(),l("div",null,[u,a("p",null,[a("a",r,[n("在ASP.NET"),c(s)]),n(' Core中，"分布视图"通常指的是将视图分布到不同的位置或文件夹结构中，以便更好地组织和管理项目中的视图文件。这有助于维护和可读性。')]),d])}const h=t(i,[["render",k],["__file","PartialView.html.vue"]]);export{h as default};
