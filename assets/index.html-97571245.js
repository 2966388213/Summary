import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{o,c,a as d}from"./app-50123cd5.js";const l={},i=d('<h1 id="sql-特殊语法" tabindex="-1"><a class="header-anchor" href="#sql-特殊语法" aria-hidden="true">#</a> sql 特殊语法</h1><h2 id="row-count" tabindex="-1"><a class="header-anchor" href="#row-count" aria-hidden="true">#</a> ROW_COUNT()</h2><p><code>ROW_NUMBER()</code> 和 <code>ROW_COUNT()</code> 是两个不同的 SQL 中的概念，分别用于执行不同的任务。</p><ol><li><p><strong>ROW_NUMBER():</strong></p><ul><li><code>ROW_NUMBER()</code> 是一个窗口函数，用于为查询结果集中的每一行分配一个唯一的行号。</li><li>通常与 <code>OVER</code> 子句结合使用，以定义窗口和排序规则。</li><li>用于产生行号，用于排序和分析数据，特别是在需要标识结果集中行的顺序时。</li><li>示例：<code>ROW_NUMBER() OVER (ORDER BY column1) AS row_num</code></li></ul></li><li><p><strong>ROW_COUNT():</strong></p><ul><li><code>ROW_COUNT()</code> 是一个函数，用于返回最后一个执行的 SQL 语句受影响的行数。</li><li>通常用于获取最近一次 <code>INSERT</code>、<code>UPDATE</code> 或 <code>DELETE</code> 语句影响的行数。</li><li>与特定表或窗口无关，而是与最近一次 SQL 语句的执行结果有关。</li><li>示例：<code>SELECT * FROM table_name; SELECT ROW_COUNT();</code></li></ul></li></ol><p>总的来说，<code>ROW_NUMBER()</code> 是一个用于为查询结果集中的每一行分配行号的窗口函数，而 <code>ROW_COUNT()</code> 是一个用于获取最近一次 SQL 语句影响的行数的函数。它们在功能和用途上有很大的区别。</p>',5),t=[i];function r(a,n){return o(),c("div",null,t)}const R=e(l,[["render",r],["__file","index.html.vue"]]);export{R as default};
