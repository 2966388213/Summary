import{_ as a}from"./plugin-vue_export-helper-c27b6911.js";import{o as e,c as n,a as s}from"./app-c7d01fa1.js";const i={},l=s(`<h1 id="使用cmaketoolchain快速创建包" tabindex="-1"><a class="header-anchor" href="#使用cmaketoolchain快速创建包" aria-hidden="true">#</a> 使用CmakeToolChain快速创建包</h1><h2 id="创建项目" tabindex="-1"><a class="header-anchor" href="#创建项目" aria-hidden="true">#</a> 创建项目</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>// 创建文件夹
<span class="token function">mkdir</span> <span class="token builtin class-name">test</span>
// 创建项目
conan new <span class="token parameter variable">-d</span> <span class="token assign-left variable">name</span><span class="token operator">=</span>test <span class="token parameter variable">-d</span> <span class="token assign-left variable">version</span><span class="token operator">=</span><span class="token number">1.0</span> cmake_exe
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="conan-install" tabindex="-1"><a class="header-anchor" href="#conan-install" aria-hidden="true">#</a> conan install</h2><blockquote><p>我们可以调用 conan install 来安装 Release 和 Debug 配置。 Conan会在对应的generators文件夹下生成一个 conan_toolchain.cmake ：</p></blockquote><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>conan <span class="token function">install</span> <span class="token builtin class-name">.</span>
conan <span class="token function">install</span> <span class="token builtin class-name">.</span> <span class="token parameter variable">-s</span> <span class="token assign-left variable">build_type</span><span class="token operator">=</span>Debug
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="构建项目" tabindex="-1"><a class="header-anchor" href="#构建项目" aria-hidden="true">#</a> 构建项目</h2><h3 id="生成debug配置" tabindex="-1"><a class="header-anchor" href="#生成debug配置" aria-hidden="true">#</a> 生成debug配置</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>cmake <span class="token parameter variable">--preset</span> conan-debug
cmake <span class="token parameter variable">--build</span> <span class="token parameter variable">--preset</span> conan-debug
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="生成release配置" tabindex="-1"><a class="header-anchor" href="#生成release配置" aria-hidden="true">#</a> 生成release配置</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>cmake <span class="token parameter variable">--preset</span> conan-release
cmake <span class="token parameter variable">--build</span> <span class="token parameter variable">--preset</span> conan-release
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,11),r=[l];function c(t,d){return e(),n("div",null,r)}const h=a(i,[["render",c],["__file","generate.html.vue"]]);export{h as default};
