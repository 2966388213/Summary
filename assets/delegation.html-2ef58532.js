const t=JSON.parse('{"key":"v-15dac1dc","path":"/kotlin/delegation.html","title":"委托","lang":"zh-CN","frontmatter":{"description":"kotlin中的委托跟c#中的委托有什么区别 Kotlin 中的委托（delegation）和 C# 中的委托（delegate）是不同的概念和机制。 在 Kotlin 中，委托是一种代码复用和组合的机制，用于将接口的实现委托给其他对象。通过委托，可以在委托类中调用委托对象的方法，实现接口的具体功能。委托可以通过 by 关键字来声明，并将委托对象作为构...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/kotlin/delegation.html"}],["meta",{"property":"og:site_name","content":"Entity的个人博客-分享编程经验"}],["meta",{"property":"og:title","content":"委托"}],["meta",{"property":"og:description","content":"kotlin中的委托跟c#中的委托有什么区别 Kotlin 中的委托（delegation）和 C# 中的委托（delegate）是不同的概念和机制。 在 Kotlin 中，委托是一种代码复用和组合的机制，用于将接口的实现委托给其他对象。通过委托，可以在委托类中调用委托对象的方法，实现接口的具体功能。委托可以通过 by 关键字来声明，并将委托对象作为构..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-06-13T07:40:32.000Z"}],["meta",{"property":"article:author","content":"Entity"}],["meta",{"property":"article:modified_time","content":"2023-06-13T07:40:32.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"委托\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-06-13T07:40:32.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Entity\\",\\"url\\":\\"https://mrhope.site\\"}]}"]]},"headers":[{"level":2,"title":"kotlin中的委托跟c#中的委托有什么区别","slug":"kotlin中的委托跟c-中的委托有什么区别","link":"#kotlin中的委托跟c-中的委托有什么区别","children":[]},{"level":2,"title":"委托能干什么","slug":"委托能干什么","link":"#委托能干什么","children":[]},{"level":2,"title":"使用委托和不使用委托的区别","slug":"使用委托和不使用委托的区别","link":"#使用委托和不使用委托的区别","children":[]}],"git":{"createdTime":1686642032000,"updatedTime":1686642032000,"contributors":[{"name":"Entity-Now","email":"2966388213@qq.com","commits":1}]},"readingTime":{"minutes":3.88,"words":1163},"filePathRelative":"kotlin/delegation.md","localizedDate":"2023年6月13日","autoDesc":true}');export{t as data};
