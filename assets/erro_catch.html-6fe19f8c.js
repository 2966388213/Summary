const t=JSON.parse('{"key":"v-0419fad7","path":"/C__/lua/erro_catch.html","title":"错误处理","lang":"zh-CN","frontmatter":{"description":"在Lua中，错误处理通常通过使用pcall函数和assert函数来实现。以下是关于Lua中错误处理的一些常见方法和技巧： 1. pcall函数： pcall（protected call）函数用于捕获并处理可能发生的错误。; 它接受一个函数作为参数，然后尝试执行该函数。如果函数执行成功，pcall返回true以及函数的返回值；如果函数执行失败，pcal...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/C__/lua/erro_catch.html"}],["meta",{"property":"og:site_name","content":"Entity的个人博客-分享编程经验"}],["meta",{"property":"og:title","content":"错误处理"}],["meta",{"property":"og:description","content":"在Lua中，错误处理通常通过使用pcall函数和assert函数来实现。以下是关于Lua中错误处理的一些常见方法和技巧： 1. pcall函数： pcall（protected call）函数用于捕获并处理可能发生的错误。; 它接受一个函数作为参数，然后尝试执行该函数。如果函数执行成功，pcall返回true以及函数的返回值；如果函数执行失败，pcal..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-09-21T03:18:03.000Z"}],["meta",{"property":"article:author","content":"Entity"}],["meta",{"property":"article:modified_time","content":"2023-09-21T03:18:03.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"错误处理\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-09-21T03:18:03.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Entity\\",\\"url\\":\\"https://mrhope.site\\"}]}"]]},"headers":[],"git":{"createdTime":1695266283000,"updatedTime":1695266283000,"contributors":[{"name":"Entity-now","email":"2966388213@qq.com","commits":1}]},"readingTime":{"minutes":1.63,"words":488},"filePathRelative":"C++/lua/erro_catch.md","localizedDate":"2023年9月21日","autoDesc":true}');export{t as data};
