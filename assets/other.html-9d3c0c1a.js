const e=JSON.parse('{"key":"v-69bad8d0","path":"/CSharp/other.html","title":"常用","lang":"zh-CN","frontmatter":{"description":"::: tip 使用C#可能会经常使用的技术 ::: Deconstruct 将元组分解赋值 在 C# 中，Deconstructor（析构函数）是一种特殊的方法，它可以将一个对象分解为其组成部分，并将这些部分分配给单独的变量。Deconstructor 方法通常与构造函数一起使用，用于创建自定义类型的对象。 ```cs public class Pe...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/CSharp/other.html"}],["meta",{"property":"og:site_name","content":"Entity的个人博客-分享编程经验"}],["meta",{"property":"og:title","content":"常用"}],["meta",{"property":"og:description","content":"::: tip 使用C#可能会经常使用的技术 ::: Deconstruct 将元组分解赋值 在 C# 中，Deconstructor（析构函数）是一种特殊的方法，它可以将一个对象分解为其组成部分，并将这些部分分配给单独的变量。Deconstructor 方法通常与构造函数一起使用，用于创建自定义类型的对象。 ```cs public class Pe..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-06-07T02:40:43.000Z"}],["meta",{"property":"article:author","content":"Entity"}],["meta",{"property":"article:modified_time","content":"2023-06-07T02:40:43.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"常用\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-06-07T02:40:43.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Entity\\",\\"url\\":\\"https://mrhope.site\\"}]}"]]},"headers":[{"level":2,"title":"Deconstruct 将元组分解赋值","slug":"deconstruct-将元组分解赋值","link":"#deconstruct-将元组分解赋值","children":[]},{"level":2,"title":"dynamic","slug":"dynamic","link":"#dynamic","children":[{"level":3,"title":"dynamic 访问未知属性","slug":"dynamic-访问未知属性","link":"#dynamic-访问未知属性","children":[]}]},{"level":2,"title":"时间戳","slug":"时间戳","link":"#时间戳","children":[]},{"level":2,"title":"位运算符","slug":"位运算符","link":"#位运算符","children":[]},{"level":2,"title":"移位运算符","slug":"移位运算符","link":"#移位运算符","children":[]},{"level":2,"title":"null 合并赋值","slug":"null-合并赋值","link":"#null-合并赋值","children":[]},{"level":2,"title":"init 仅限初始化赋值，可以代替set属性","slug":"init-仅限初始化赋值-可以代替set属性","link":"#init-仅限初始化赋值-可以代替set属性","children":[]},{"level":2,"title":"with 处理不可变的数据类型时可以创建新值","slug":"with-处理不可变的数据类型时可以创建新值","link":"#with-处理不可变的数据类型时可以创建新值","children":[]},{"level":2,"title":"改进的匹配模式 when","slug":"改进的匹配模式-when","link":"#改进的匹配模式-when","children":[]},{"level":2,"title":"yield 迭代器","slug":"yield-迭代器","link":"#yield-迭代器","children":[]},{"level":2,"title":"记录类型,类型kotlin的数据类","slug":"记录类型-类型kotlin的数据类","link":"#记录类型-类型kotlin的数据类","children":[]},{"level":2,"title":"从c#9开始 只需要一句代码就能运行程序","slug":"从c-9开始-只需要一句代码就能运行程序","link":"#从c-9开始-只需要一句代码就能运行程序","children":[]},{"level":2,"title":"模式匹配","slug":"模式匹配","link":"#模式匹配","children":[]},{"level":2,"title":"partial 扩展类","slug":"partial-扩展类","link":"#partial-扩展类","children":[]},{"level":2,"title":"锁 look","slug":"锁-look","link":"#锁-look","children":[]},{"level":2,"title":"mutex 锁","slug":"mutex-锁","link":"#mutex-锁","children":[]},{"level":2,"title":"regex","slug":"regex","link":"#regex","children":[]},{"level":2,"title":"参数关键词in and out","slug":"参数关键词in-and-out","link":"#参数关键词in-and-out","children":[]},{"level":2,"title":"timer 定时执行任务","slug":"timer-定时执行任务","link":"#timer-定时执行任务","children":[]}],"git":{"createdTime":1686105643000,"updatedTime":1686105643000,"contributors":[{"name":"Entity-Now","email":"2966388213@qq.com","commits":1}]},"readingTime":{"minutes":4.74,"words":1423},"filePathRelative":"CSharp/other.md","localizedDate":"2023年6月7日","autoDesc":true}');export{e as data};
